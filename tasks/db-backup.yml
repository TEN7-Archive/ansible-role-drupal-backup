---
- name: create backup directory
  file:
    path: "{{ db_backup_dir }}"
    state: directory
    owner: "{{ db_backup_owner }}"
    group: "{{ db_backup_group }}"
    mode: "{{ db_backup_dir_mode }}"
- name: Generate default database item
  set_fact:
    __default_database:
        - name: "{{ db_name }}"
- name: Generate database list
  set_fact:
    __database_list: "{{ __default_database | list + drupal_backup_additional_dbs | list }}"
- name: Generate the pattern list
  set_fact:
    __patterns: "{{ __database_list | map(attribute='name') |  map('regex_replace', '(.*)', '\\1_*.sql.gz') | list }}"
- name: find old database dumps
  find:
    path: "{{ db_backup_dir }}"
    patterns: "{{ __patterns }}"
    age: "{{ db_backup_clear_age }}"
  register: result
- name: delete old database dumps
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ result.files | default([]) }}"
- name: backup databases
  mysql_db:
    state: dump
    name: "{{ item.name }}"
    target: "{{ db_backup_dir }}/{{ item.name }}_{{ drupal_backup_timestamp }}.sql.gz"
    login_host: "{{ item.host | default(db_host) }}"
    login_port: "{{ item.port | default(db_port) | int }}"
    login_user: "{{ item.user | default(db_user) }}"
    login_password: "{{ item.password | default(db_password) }}"
  with_items: "{{ __database_list }}"
- name: chown the db backups
  file:
    path: "{{ db_backup_dir }}/{{ item.name }}_{{ drupal_backup_timestamp }}.sql.gz"
    state: file
    owner: "{{ item.owner | default(db_backup_owner) }}"
    group: "{{ item.group | default(db_backup_group) }}"
    mode: "0500"
  with_items: "{{ __database_list }}"
